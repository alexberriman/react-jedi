@import "tailwindcss";
@import "tw-animate-css";
@import "./interactive-states.css";

/* Force Tailwind to generate utility classes for our custom colors */
@layer utilities {
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-destructive {
    background-color: var(--color-destructive);
  }
  .bg-accent {
    background-color: var(--color-accent);
  }
  .bg-muted {
    background-color: var(--color-muted);
  }
  .bg-card {
    background-color: var(--color-card);
  }
  .bg-popover {
    background-color: var(--color-popover);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-primary-foreground {
    color: var(--color-primary-foreground);
  }
  .text-secondary-foreground {
    color: var(--color-secondary-foreground);
  }
  .text-destructive-foreground {
    color: var(--color-destructive-foreground);
  }
  .text-accent-foreground {
    color: var(--color-accent-foreground);
  }
  .text-muted-foreground {
    color: var(--color-muted-foreground);
  }
  .text-card-foreground {
    color: var(--color-card-foreground);
  }
  .text-popover-foreground {
    color: var(--color-popover-foreground);
  }
  /* Hover states */
  .hover\:bg-primary\/90:hover {
    background-color: color-mix(in oklch, var(--color-primary) 90%, transparent);
  }
  .hover\:bg-secondary\/80:hover {
    background-color: color-mix(in oklch, var(--color-secondary) 80%, transparent);
  }
  .hover\:bg-destructive\/90:hover {
    background-color: color-mix(in oklch, var(--color-destructive) 90%, transparent);
  }
  .hover\:bg-accent\/80:hover {
    background-color: color-mix(in oklch, var(--color-accent) 80%, transparent);
  }
  .hover\:bg-muted\/40:hover {
    background-color: color-mix(in oklch, var(--color-muted) 40%, transparent);
  }
  /* Ring utilities */
  .ring-ring {
    --tw-ring-color: var(--color-ring);
  }
  /* Border utilities */
  .border-border {
    border-color: var(--color-border);
  }
  .border-input {
    border-color: var(--color-input);
  }
}

@custom-variant dark (&:is(.dark *));

:root {
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --primary-hover: oklch(0.25 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --secondary-hover: oklch(0.94 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --destructive-foreground: hsl(210 40% 98%);
  --destructive-hover: oklch(0.52 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --radius: 0.625rem;
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --primary-hover: oklch(0.85 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --secondary-hover: oklch(0.32 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --destructive-foreground: hsl(210 40% 98%);
  --destructive-hover: oklch(0.65 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

/* Map Tailwind's color variables back to our CSS variables for compatibility */
@layer base {
  :root {
    --color-primary: var(--primary);
    --color-primary-foreground: var(--primary-foreground);
    --color-secondary: var(--secondary);
    --color-secondary-foreground: var(--secondary-foreground);
    --color-destructive: var(--destructive);
    --color-destructive-foreground: var(--destructive-foreground);
    --color-accent: var(--accent);
    --color-accent-foreground: var(--accent-foreground);
    --color-background: var(--background);
    --color-foreground: var(--foreground);
    --color-muted: var(--muted);
    --color-muted-foreground: var(--muted-foreground);
    --color-border: var(--border);
    --color-input: var(--input);
    --color-ring: var(--ring);
    --color-card: var(--card);
    --color-card-foreground: var(--card-foreground);
    --color-popover: var(--popover);
    --color-popover-foreground: var(--popover-foreground);
  }
}

@theme {
  /* Color definitions for Tailwind v4 */
  --color-primary: oklch(0.205 0 0);
  --color-primary-foreground: oklch(0.985 0 0);
  --color-secondary: oklch(0.97 0 0);
  --color-secondary-foreground: oklch(0.205 0 0);
  --color-destructive: oklch(0.577 0.245 27.325);
  --color-destructive-foreground: oklch(0.98 0 0);
  --color-accent: oklch(0.97 0 0);
  --color-accent-foreground: oklch(0.205 0 0);
  --color-background: oklch(1 0 0);
  --color-foreground: oklch(0.145 0 0);
  --color-muted: oklch(0.97 0 0);
  --color-muted-foreground: oklch(0.556 0 0);
  --color-border: oklch(0.922 0 0);
  --color-input: oklch(0.922 0 0);
  --color-ring: oklch(0.708 0 0);
  --color-card: oklch(1 0 0);
  --color-card-foreground: oklch(0.145 0 0);
  --color-popover: oklch(1 0 0);
  --color-popover-foreground: oklch(0.145 0 0);
  
  /* Border radius */
  --radius: 0.625rem;
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}


@layer base {
  * {
    border-color: var(--color-border);
    outline-color: color-mix(in oklch, var(--color-ring) 50%, transparent);
  }
  body {
    background-color: var(--color-background);
    color: var(--color-foreground);
  }
}

/* ========== Core Animation System ========== */

/* Fade Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-down {
  from {
    opacity: 0;
    transform: translateY(-1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-left {
  from {
    opacity: 0;
    transform: translateX(1rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fade-in-right {
  from {
    opacity: 0;
    transform: translateX(-1rem);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Scale Animations */
@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scale-up {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.05);
  }
}

/* Glow Animations */
@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 20px -10px var(--primary);
  }
  50% {
    box-shadow: 0 0 30px -5px var(--primary);
  }
}

@keyframes text-glow {
  0%, 100% {
    filter: drop-shadow(0 0 10px currentColor);
  }
  50% {
    filter: drop-shadow(0 0 20px currentColor) drop-shadow(0 0 30px currentColor);
  }
}

/* Gradient Animations */
@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes gradient-flow {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 200% 50%;
  }
}

/* Float Animations */
@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes blob {
  0%, 100% {
    transform: translate(0, 0) scale(1);
  }
  25% {
    transform: translate(20px, -30px) scale(1.1);
  }
  50% {
    transform: translate(-10px, 20px) scale(0.9);
  }
  75% {
    transform: translate(-20px, -10px) scale(1.05);
  }
}

/* Typewriter Animation */
@keyframes typewriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink {
  0%, 50% {
    opacity: 1;
  }
  51%, 100% {
    opacity: 0;
  }
}

/* Border Animations */
@keyframes border-flow {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 100% 50%;
  }
}

/* Pulse Animations */
@keyframes pulse-slow {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.6;
  }
}

@keyframes pulse-ring {
  0% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 var(--primary);
  }
  70% {
    transform: scale(1);
    box-shadow: 0 0 0 10px transparent;
  }
  100% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 transparent;
  }
}

/* Slide Animations */
@keyframes slide-up {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slide-down {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slide-in-from-top-2 {
  from {
    opacity: 0;
    transform: translateY(-0.5rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-in-from-bottom-2 {
  from {
    opacity: 0;
    transform: translateY(0.5rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-in-from-bottom-4 {
  from {
    opacity: 0;
    transform: translateY(1rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Zoom Animations */
@keyframes zoom-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Spin Animations */
@keyframes spin-in {
  from {
    opacity: 0;
    transform: rotate(-180deg) scale(0.5);
  }
  to {
    opacity: 1;
    transform: rotate(0) scale(1);
  }
}

/* Shimmer Animation for Skeleton Loader */
@keyframes shimmer {
  to {
    transform: translateX(100%);
  }
}

/* ========== Animation Classes ========== */

.animate-fadeIn {
  animation: fadeIn var(--animation-duration, 0.3s) var(--animation-timing, ease-out) var(--animation-delay, 0s) forwards;
  opacity: 0;
}

.animate-fade-in {
  animation: fade-in 0.8s ease-out forwards;
}

.animate-fade-in-up {
  animation: fade-in-up 0.8s ease-out forwards;
}

.animate-fade-in-down {
  animation: fade-in-down 0.8s ease-out forwards;
}

.animate-fade-in-left {
  animation: fade-in-left 0.8s ease-out forwards;
}

.animate-fade-in-right {
  animation: fade-in-right 0.8s ease-out forwards;
}

.animate-scale-in {
  animation: scale-in 0.5s ease-out forwards;
}

.animate-scale-up {
  animation: scale-up 0.3s ease-out forwards;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite;
}

.animate-text-glow {
  animation: text-glow 2s ease-in-out infinite;
}

.animate-gradient-shift {
  background-size: 200% 200%;
  animation: gradient-shift 8s ease infinite;
}

.animate-gradient-flow {
  background-size: 200% 200%;
  animation: gradient-flow 5s linear infinite;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-blob {
  animation: blob 8s ease-in-out infinite;
}

.animate-typewriter {
  overflow: hidden;
  border-right: 2px solid;
  width: 0;
  animation: typewriter 3s steps(30, end) forwards, blink 0.75s step-end infinite;
}

.animate-border-flow {
  position: relative;
  background: linear-gradient(90deg, var(--primary), var(--accent), var(--primary)) 0 0 / 300% 100%;
  background-clip: padding-box;
  animation: border-flow 3s linear infinite;
}

.animate-pulse-slow {
  animation: pulse-slow 3s ease-in-out infinite;
}

.animate-pulse-ring {
  animation: pulse-ring 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-slide-up {
  animation: slide-up 0.5s ease-out forwards;
}

.animate-slide-down {
  animation: slide-down 0.5s ease-out forwards;
}

.animate-zoom-in {
  animation: zoom-in 0.5s ease-out forwards;
}

.animate-spin-in {
  animation: spin-in 0.7s ease-out forwards;
}

.animate-slide-in-from-top-2 {
  animation: slide-in-from-top-2 0.3s ease-out forwards;
}

.animate-slide-in-from-bottom-2 {
  animation: slide-in-from-bottom-2 0.3s ease-out forwards;
}

.animate-slide-in-from-bottom-4 {
  animation: slide-in-from-bottom-4 0.5s ease-out forwards;
}

/* Generic animate-in with modifiers */
.animate-in {
  opacity: 0;
  animation-fill-mode: forwards;
}

.animate-in.fade-in {
  animation-name: fade-in;
}

.animate-in.zoom-in {
  animation-name: zoom-in;
}

.animate-in.spin-in {
  animation-name: spin-in;
}

.animate-in.slide-in-from-top-2 {
  animation-name: slide-in-from-top-2;
}

.animate-in.slide-in-from-bottom-2 {
  animation-name: slide-in-from-bottom-2;
}

.animate-in.slide-in-from-bottom-4 {
  animation-name: slide-in-from-bottom-4;
}

.animate-in.duration-300 {
  animation-duration: 300ms;
}

.animate-in.duration-500 {
  animation-duration: 500ms;
}

.animate-in.duration-700 {
  animation-duration: 700ms;
}

/* ========== Animation Utilities ========== */

.animation-delay-100 {
  animation-delay: 100ms;
}

.animation-delay-200 {
  animation-delay: 200ms;
}

.animation-delay-300 {
  animation-delay: 300ms;
}

.animation-delay-400 {
  animation-delay: 400ms;
}

.animation-delay-500 {
  animation-delay: 500ms;
}

.animation-delay-600 {
  animation-delay: 600ms;
}

.animation-delay-700 {
  animation-delay: 700ms;
}

.animation-delay-800 {
  animation-delay: 800ms;
}

.animation-delay-1000 {
  animation-delay: 1s;
}

/* Stagger animations for groups */
.stagger-animation > * {
  opacity: 0;
  animation: fade-in-up 0.6s ease-out forwards;
}

.stagger-animation > *:nth-child(1) { animation-delay: 0ms; }
.stagger-animation > *:nth-child(2) { animation-delay: 100ms; }
.stagger-animation > *:nth-child(3) { animation-delay: 200ms; }
.stagger-animation > *:nth-child(4) { animation-delay: 300ms; }
.stagger-animation > *:nth-child(5) { animation-delay: 400ms; }
.stagger-animation > *:nth-child(6) { animation-delay: 500ms; }
.stagger-animation > *:nth-child(7) { animation-delay: 600ms; }
.stagger-animation > *:nth-child(8) { animation-delay: 700ms; }

/* Parallax effect */
.parallax {
  will-change: transform;
  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* Hover transitions */
.hover-lift {
  transition: transform 0.3s ease;
}

.hover-lift:hover {
  transform: translateY(-5px);
}

.hover-scale {
  transition: transform 0.3s ease;
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-glow {
  transition: box-shadow 0.3s ease;
}

.hover-glow:hover {
  box-shadow: 0 0 30px -5px var(--primary);
}

.hover-border-glow {
  position: relative;
  overflow: hidden;
}

.hover-border-glow::before {
  content: "";
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, var(--primary), var(--accent), var(--primary));
  border-radius: inherit;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.hover-border-glow:hover::before {
  opacity: 1;
}

/* Gradient text effect */
.gradient-text {
  background: linear-gradient(135deg, var(--primary), var(--accent));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
}

.animated-gradient-text {
  background: linear-gradient(90deg, var(--primary), var(--accent), var(--primary));
  background-size: 200% 100%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
  animation: gradient-flow 3s linear infinite;
}

/* Accessibility - Reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Text shining effect */
@keyframes shine {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

.text-shine {
  background: linear-gradient(
    90deg,
    currentColor 40%,
    rgba(255, 255, 255, 0.8) 50%,
    currentColor 60%
  );
  background-size: 200% 100%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: shine 3s linear infinite;
}

/* Floating shapes for backgrounds */
.floating-shape {
  position: absolute;
  opacity: 0.1;
  animation: float 8s ease-in-out infinite;
}

.floating-shape-1 {
  width: 300px;
  height: 300px;
  background: linear-gradient(45deg, var(--primary), var(--accent));
  border-radius: 50%;
  top: -150px;
  left: -150px;
  animation-delay: 0s;
}

.floating-shape-2 {
  width: 200px;
  height: 200px;
  background: linear-gradient(135deg, var(--accent), var(--secondary));
  border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
  bottom: -100px;
  right: -100px;
  animation-delay: 2s;
  animation-name: blob;
}

.floating-shape-3 {
  width: 150px;
  height: 150px;
  background: linear-gradient(225deg, var(--primary), var(--secondary));
  border-radius: 63% 37% 54% 46% / 55% 48% 52% 45%;
  top: 40%;
  right: -75px;
  animation-delay: 4s;
  animation-name: blob;
}