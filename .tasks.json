[
  {
    "id": "component-fixes-storybook",
    "description": "Theres quite a few components that need a bit of polish, either just the component itself or storybook. You can take multiple of these subtasks simultaneously to help speed up development. For all subtasks, where appropriate, make sure stories are updated, and relevant pages in the showcase examples app (./examples).  Feel free to pick multiple sub tasks at the same time to speed up development.",
    "status": "pending",
    "subtasks": [
      {
        "id": "togglegroup",
        "description": "The ToggleGroup component default story goes black bg when hover - this looks awful, it should be a lot more subtle (very light grey for example). Textarea, input fields etc. have the WORST grey background on hover - they either shouldn't have any hover background, or should be VERY subtle (i.e. if main bg is white, should hover to bg-gray-50 or something (or whatever that equivalent is). This impacts Textarea, Input, Select. Like honestly, its the worst thing I've ever seen.",
        "status": "completed"
      },
      {
        "id": "accordion",
        "description": "The Accordion component items go dark grey bg when hover - this looks awful, it should be a lot more subtle (very light grey for example). Also, text kind of jumps - i guessing there is no padding, and then when you hover there is padding, causing text to jump. Honestly, you are so far from the mark on this component. Redo all of the UI to make it way sexier, way more ðŸ”¥ (while still being really clean). Use framer motion/animations/transition etc. to make it all really, really nice.",
        "status": "completed"
      },
      {
        "id": "switch-animate",
        "description": "Can you animate the transition of the Switch component. Make it optional as a prop (default to animate, but have a prop to disable animation). Update the storybook page.",
        "status": "completed"
      },
      {
        "id": "select-flicker",
        "description": "When I click the Select box and the dropdown comes down, the main Select box 'flickers'. It goes invisible, visible, moves, etc. Please take a look and make sure it doesnt flicker or whatever and is very clean and functional. This also affects the ComboBox component.",
        "status": "completed"
      },
      {
        "id": "radiogroup",
        "description": "The RadioGroup options should have cursor-pointer on hover. ALso, when I hover over a RadioGroup option, the 'circle' element disappears for some reason. Both of these issues also impact the CheckBox component.",
        "status": "completed"
      },
      {
        "id": "masonry",
        "description": "The Masonry component has a 'Pinterest Gallery' story/variant. When you hover over, the image kind of zooms, text appears, etc. It just 'appears' and looks weird - this should all transition in smoothly with framer motion.",
        "status": "completed"
      },
      {
        "id": "grid-stories",
        "description": "Why, in the Grid component storybooks, are most of the boxes fading in and out? Remove this",
        "status": "completed"
      },
      {
        "id": "form-stories",
        "description": "The Form component storybook has a With Initial Errors story. I dont actually see any errors in this variant/state. Can you investigate and confirm whether its a storybook issue or component issue. If component issue, fix it.",
        "status": "completed"
      },
      {
        "id": "placeholder-images",
        "description": "The following component stories contain images that 404. Can you update with images from Picsum (if photo) or placehold.co (if not photo). You can see examples from other component storybooks: Box ('Box With Backdrop Blur')",
        "status": "completed"
      },
      {
        "id": "tooltip-flicker",
        "description": "When I first load the Tooltip stories, all of the buttons (Hover me) 'flicker' - theyre visible, then go invisible and back to visible. Please fix. Also - when I hover, I dont see the tooltip. This component seems REALLY buggy, please investigate and fix.",
        "status": "completed"
      },
      {
        "id": "dropdown-menu-flicker",
        "description": "When I first load the DropdownMenu stories, all of the buttons (Open Menu) 'flicker' - theyre visible, then go invisible and back to visible. Please fix.",
        "status": "completed"
      },
      {
        "id": "drawer-menu-flicker",
        "description": "When I first load the Drawer stories, all of the buttons (Open Drawer) 'flicker' - theyre visible, then go invisible and back to visible. Please fix.",
        "status": "completed"
      },
      {
        "id": "dialog-menu-flicker",
        "description": "When I first load the Dialog stories, all of the buttons (Open Dialog) 'flicker' - theyre visible, then go invisible and back to visible. Please fix.",
        "status": "completed"
      },
      {
        "id": "alertdialog-flicker",
        "description": "When I first load the AlertDialog stories, all of the buttons (Show Dialog) 'flicker' - theyre visible, then go invisible and back to visible. Please fix.",
        "status": "completed"
      },
      {
        "id": "datepicker-flicker",
        "description": "When I first load the Dialog stories, all of the buttons (Pick a date) 'flicker' - theyre visible, then go invisible and back to visible. Please fix.",
        "status": "completed"
      },
      {
        "id": "collapsible-flicker",
        "description": "When I first load the Collapsible stories, all of the buttons (Toggle Content) 'flicker' - theyre visible, then go invisible and back to visible. Please fix. Theres also a weird flicker effect when content appears and disappears",
        "status": "completed"
      },
      {
        "id": "toast-background-zindex",
        "description": "Im not sure whaats going on with the Toast component, but when I click the buttons on storybook, the toasts show up, but they either have no bg, or z-index is messed up or something, as the button is over it or visible or something. Please invvestigate and fix.",
        "status": "completed"
      },
      {
        "id": "tabs-animate",
        "description": "Can you update the tabs component to 'animate' between tab transitions (both the tabs and the content). Add a prop to disable this, but enable by default (make sure to update storybook). Can you also update the UI of tabs component to make it look a lot more modern and nicer visually? (while still being really clean, simple and sexy)",
        "status": "completed"
      },
      {
        "id": "table-ui",
        "description": "The UI of the table component absolutely blows. Can you completely update the UI of the Table component to make it look way nicer, sexier (while still being really clean and modern). Feel free to add multiple style variants. Make sure to update storybook with all variants and the showcase page in the example app (./examples).",
        "status": "completed"
      },
      {
        "id": "docs",
        "description": "The following component storybooks dont have a 'Docs' story (all of them should): SkeletonLoader, Loading",
        "status": "completed"
      },
      {
        "id": "sidebar-blocks",
        "description": "We define basic components like buttons as Components and more advanced components (like TeamGrid) as Blocks. Currently, Sidebar is in the components dir and classified as a component. Can you move this code to the blocks dir, update the storybook to be in the Blocks category, and move it from the Components showcase (in example app ./examples) to the blocks components showcase in the example app?",
        "status": "completed"
      },
      {
        "id": "sheet-flicker",
        "description": "When I first load the Sheet stories, all of the buttons (Open Sheet) 'flicker' - theyre visible, then go invisible and back to visible. Please fix. Also - the sheet should animate/transition out (framer motion?) rather than just 'appear'. It looks awful. Also - the Sheet title/subtitle? is padded (good), but the sheet content isnt (bad). Please fix. ",
        "status": "completed"
      },
      {
        "id": "progress-stories-not-visible",
        "description": "I can't see some of the Progress stories - not sure why. Please investigate and fix: Default, Empty, Quarter, Half, Three Quarters, Complete. I can see all of the rest",
        "status": "completed"
      },
      {
        "id": "popover-flutter",
        "description": "When I click the buttons on the Popover storybook page, the button flickers into and out of existence (and kind of moves). Not sure why - fix.",
        "status": "completed"
      },
      {
        "id": "navigation-menu-height",
        "description": "Increase the height of all of the NavigationMenu storybook containers (manually set them to 600px or something). I cant see the dropdown menues. Also, when you hover over a menu item in the NavigationMenu, I DONT want it to be underlined. Also - when an item has a dropdown, there is again that really fucking annoying flicker where it goes visible and then not visible, and the fucking text is WHITE ON A GREY BACKGROUND - CANT READ IT. This component needs to be restyled to be a lot sexier, cleaner, more modern and brandable.",
        "status": "completed"
      },
      {
        "id": "remove-menubar",
        "description": "I don't know what this MenuBar component is, but it sucks. Remove it, stories, remove it from the examples app, component map, docs, etc. Get rid of it.",
        "status": "completed"
      },
      {
        "id": "markdown-code",
        "description": "The Markdown component looks REALLY nice. FOr some reason though, there is a 'grey' border or somerthing around the code example? The code examples look sick, not sure why there is that gray border around them.",
        "status": "pending"
      },
      {
        "id": "keyboard-navigation-hover",
        "description": "I don't know whats going on, but when I hover over the KeyboardNavigationMenu component the background color goes black for some ridiculous reason.",
        "status": "pending"
      },
      {
        "id": "image-zoom",
        "description": "In the Gallery story of the Image component, when I hover over the image there is some sort of zoom effect. It should animate/transition in with something like framer rather than be instant.",
        "status": "pending"
      },
      {
        "id": "card-image-zoom",
        "description": "The Card component has a 'With Zoom Image' story/variant. The zoom should animate/transition in with something like framer, and be a bit slower",
        "status": "pending"
      },
      {
        "id": "hero",
        "description": "The Hero component block default stories have this really weird effect on the main title where it kind fades from right to left or something - get rid of it. It looks awful. Otherwise, looks good.",
        "status": "pending"
      },
      {
        "id": "statblock-ui",
        "description": "Can you redo all of the ui/styles for the StatBlock component? Its way too basic - just text on plain background. Make it more visual, modern, beautiful (but still simple and clean). Maybe add more variants. Update storybook and showcase examples app.",
        "status": "pending"
      },
      {
        "id": "restaurant-menu-block",
        "description": "The RestaurantMenuBlock component - the default story has categories/filters or something - this isn't centered horizontally (it should) - the container should be 100% width of the parent, and all of the buttons/filters centered horizontally. At the moment it doesn't align with the title/subtitle/search. Also - quite a few images on this page 404. Can you use photos from picsum (see examples in other storybooks).",
        "status": "pending"
      },
      {
        "id": "product-showcase-flickering",
        "description": "The ProductShowcase component has a lot of really strange flickering going on. Can you investigate and fix. Quite a few images on this page 404 (storybooks) - can you make sure theyre using images from picsum.",
        "status": "pending"
      },
      {
        "id": "process-steps-line",
        "description": "The line on the ProcessSteps component block don't go all the way (both horizontally and vertically). Please fix - also the UI looks quite.. bleh. Old, dates. Please make it a lot sexier (still clean and simple though).",
        "status": "pending"
      },
      {
        "id": "portfolio-case-studies-zoom",
        "description": "Can you make sure when I hover over a card on the PortfolioCaseStudies component, the image that 'zooms' transitions/animates in with something like framer motion? Can you also slow it down so its quite noticable. Can you make sure the button on this component (View Case Study) has cursor pointer, as do buttons for pagination (on hover etc.). If this is an issue on the Button component - update it there",
        "status": "pending"
      },
      {
        "id": "photo-gallery-image-zoom",
        "description": "Can you make sure when I hover over an image in the PhotoGallery component, the image that 'zooms' transitions/animates in with something like framer motion? Can you also slow it down so its quite noticable. Also - not sure whats going on, but half the tag isnt visible (its overflowing outside of the container)",
        "status": "pending"
      },
      {
        "id": "photo-flip-card",
        "description": "When you flip the photo flip card, it flips and there is a white background/shadow while its flipping. This kind of ruins the flip effect. Please somehow fix, or use transparent background/no shadow on the container. Some of the images on the storybooks page for this component 404 - please use Picsum (see other component stories for examples).",
        "status": "pending"
      },
      {
        "id": "page-hero-header",
        "description": "Love this component/block. Can you add another option to configure an 'overlay'? Use case: 'Fullscreen With Background Image' - I would like an overlay (either black or white, default black) where I can control the opacity (default it) to make the text more legible over the image. Make this configurable, update stories and showcase examples page (./examples)",
        "status": "pending"
      },
      {
        "id": "maps",
        "description": "I can't see any maps in some of the stories for the Map component (Default, Flat Style, Street Style, Satellite Style, Minimal, With Custom Styling, Single Location Minimal, Event Venue). Theres more actually - please investigate and fix. Also, when scrolling using my mousewheel, and I scroll over a map, it stops and starts zooming in/out the map. I think you can disable this behaviour with leaflet - please do. Also - is it possible to remove the Leaflet/carto copyright? If so, can you do it.",
        "status": "pending"
      },
      {
        "id": "latest-news-image-zoom",
        "description": "Can you make sure when I hover over an image in the Latest News component, the image that 'zooms' transitions/animates in with something like framer motion? Can you also slow it down so its quite noticable.",
        "status": "pending"
      },
      {
        "id": "header",
        "description": "Some images in Header block component stories 404 - can you use placehold.co (see other storybooks for examples). ALso - menu is awful. Hovering over a menu item with dropdown flickers it, its white text on a light gray background, the text is underlined (it shuoldnt be). The buttons on the right should also have cursor-pointer. If these are issues in reusable components, please ensure theyre fixed in the reusable components",
        "status": "pending"
      },
      {
        "id": "faq",
        "description": "Can you make sure any element in the FAQ component that is clickable has cursor-pointer (next prev buttons, + symbol etc.). On the carousel variant, there is a really weird pink/red dot or something bottom left (is it meant to be a tag or something, because barely any of it is visible - it overflows outside of the container with hidden overflow)",
        "status": "pending"
      },
      {
        "id": "event-listings",
        "description": "A lot of the images in the EventListings storybook 404 - update all to use picsum",
        "status": "pending"
      },
      {
        "id": "error-page-sexier",
        "description": "Can you make the ErrorPage component look way sexier, and make different variations for different styles of websites (blog, ecommerce platform, magazine, restaurant, etc.)",
        "status": "pending"
      },
      {
        "id": "carousel",
        "description": "I can't see any images in some of the Carousel component stories. Not sure what the issue is, please investigate. Also please update all iamges to use picsum (see examples elsewhere)",
        "status": "pending"
      },
      {
        "id": "call-to-action",
        "description": "Make sure the buttons are centered horizontally in the CallToAction component (the cta buttons Start Free Trial watch demo). The container needs to be 100% width and buttons centered within it.",
        "status": "pending"
      },
      {
        "id": "blog-post-detail",
        "description": "Update the BlogPostDetail component to render markdown (and use our Markdown component we have already built internally). Update storybook and showcase example app (./examples)",
        "status": "pending"
      }
    ]
  }, {
    "id": "sdui-story-rendering",
    "description": "Add SDUI render function stories for all existing component storybooks. For each component that has storybook stories, create additional story variants that demonstrate the same UI/behavior but rendered using the SDUI render() function with JSON specifications. This validates that all components work correctly in both direct React usage and through the SDUI system. Each story variant should have both the original React version and an SDUI version (e.g., 'Default' and 'Default (SDUI)').",
    "status": "pending",
    "subtasks": [
      {
        "id": "sdui-accordion",
        "description": "Add SDUI render stories for Accordion component (/src/components/ui/accordion/accordion.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-alert-dialog",
        "description": "Add SDUI render stories for AlertDialog component (/src/components/ui/alert-dialog/alert-dialog.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-alert",
        "description": "Add SDUI render stories for Alert component (/src/components/ui/alert/alert.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-aspect-ratio",
        "description": "Add SDUI render stories for AspectRatio component (/src/components/ui/aspect-ratio/aspect-ratio.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-avatar",
        "description": "Add SDUI render stories for Avatar component (/src/components/ui/avatar/avatar.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-badge",
        "description": "Add SDUI render stories for Badge component (/src/components/ui/badge/badge.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-blockquote",
        "description": "Add SDUI render stories for Blockquote component (/src/components/ui/blockquote/blockquote.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-box",
        "description": "Add SDUI render stories for Box component (/src/components/ui/box/box.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-breadcrumb",
        "description": "Add SDUI render stories for Breadcrumb component (/src/components/ui/breadcrumb/breadcrumb.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-button",
        "description": "Add SDUI render stories for Button component (/src/components/ui/button/button.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-calendar",
        "description": "Add SDUI render stories for Calendar component (/src/components/ui/calendar/calendar.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-card",
        "description": "Add SDUI render stories for Card component (/src/components/ui/card/card.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-center",
        "description": "Add SDUI render stories for Center component (/src/components/ui/center/center.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-chart",
        "description": "Add SDUI render stories for Chart component (/src/components/ui/chart/chart.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-checkbox",
        "description": "Add SDUI render stories for Checkbox component (/src/components/ui/checkbox/checkbox.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-collapsible",
        "description": "Add SDUI render stories for Collapsible component (/src/components/ui/collapsible/collapsible.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-combobox",
        "description": "Add SDUI render stories for Combobox component (/src/components/ui/combobox/combobox.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-command",
        "description": "Add SDUI render stories for Command component (/src/components/ui/command/command.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-container",
        "description": "Add SDUI render stories for Container component (/src/components/ui/container/container.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-context-menu",
        "description": "Add SDUI render stories for ContextMenu component (/src/components/ui/context-menu/context-menu.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-data-table",
        "description": "Add SDUI render stories for DataTable component (/src/components/ui/data-table/data-table.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-date-picker",
        "description": "Add SDUI render stories for DatePicker component (/src/components/ui/date-picker/date-picker.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-dialog",
        "description": "Add SDUI render stories for Dialog component (/src/components/ui/dialog/dialog.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-drawer",
        "description": "Add SDUI render stories for Drawer component (/src/components/ui/drawer/drawer.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-dropdown-menu",
        "description": "Add SDUI render stories for DropdownMenu component (/src/components/ui/dropdown-menu/dropdown-menu.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-flex",
        "description": "Add SDUI render stories for Flex component (/src/components/ui/flex/flex.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-form",
        "description": "Add SDUI render stories for Form component (/src/components/ui/form/form.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-grid",
        "description": "Add SDUI render stories for Grid component (/src/components/ui/grid/grid.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-group",
        "description": "Add SDUI render stories for Group component (/src/components/ui/group/group.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-head-manager",
        "description": "Add SDUI render stories for HeadManager component (/src/components/ui/head-manager/head-manager.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-extended-head-manager",
        "description": "Add SDUI render stories for ExtendedHeadManager component (/src/components/ui/head-manager/extended-head-manager.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-heading",
        "description": "Add SDUI render stories for Heading component (/src/components/ui/heading/heading.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-hero",
        "description": "Add SDUI render stories for Hero component (/src/components/ui/hero/hero.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-hover-card",
        "description": "Add SDUI render stories for HoverCard component (/src/components/ui/hover-card/hover-card.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-image",
        "description": "Add SDUI render stories for Image component (/src/components/ui/image/image.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-input-otp",
        "description": "Add SDUI render stories for InputOTP component (/src/components/ui/input-otp/input-otp.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-input",
        "description": "Add SDUI render stories for Input component (/src/components/ui/input/input.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-keyboard-navigation-menu",
        "description": "Add SDUI render stories for KeyboardNavigationMenu component (/src/components/ui/keyboard-navigation-menu/keyboard-navigation-menu.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-label",
        "description": "Add SDUI render stories for Label component (/src/components/ui/label/label.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-loading",
        "description": "Add SDUI render stories for Loading component (/src/components/ui/loading/loading.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-markdown",
        "description": "Add SDUI render stories for Markdown component (/src/components/ui/markdown/markdown.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-masonry",
        "description": "Add SDUI render stories for Masonry component (/src/components/ui/masonry/masonry.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-menubar",
        "description": "Add SDUI render stories for Menubar component (/src/components/ui/menubar/menubar.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-navigation-menu",
        "description": "Add SDUI render stories for NavigationMenu component (/src/components/ui/navigation-menu/navigation-menu.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-pagination",
        "description": "Add SDUI render stories for Pagination component (/src/components/ui/pagination/pagination.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-popover",
        "description": "Add SDUI render stories for Popover component (/src/components/ui/popover/popover.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-progress",
        "description": "Add SDUI render stories for Progress component (/src/components/ui/progress/progress.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-radio-group",
        "description": "Add SDUI render stories for RadioGroup component (/src/components/ui/radio-group/radio-group.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-resizable",
        "description": "Add SDUI render stories for Resizable component (/src/components/ui/resizable/resizable.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-scroll-area",
        "description": "Add SDUI render stories for ScrollArea component (/src/components/ui/scroll-area/scroll-area.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-select",
        "description": "Add SDUI render stories for Select component (/src/components/ui/select/select.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-separator",
        "description": "Add SDUI render stories for Separator component (/src/components/ui/separator/separator.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-sheet",
        "description": "Add SDUI render stories for Sheet component (/src/components/ui/sheet/sheet.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-sidebar",
        "description": "Add SDUI render stories for Sidebar component (/src/components/ui/sidebar/sidebar.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-simple-grid",
        "description": "Add SDUI render stories for SimpleGrid component (/src/components/ui/simple-grid/simple-grid.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-skeleton-loader",
        "description": "Add SDUI render stories for SkeletonLoader component (/src/components/ui/skeleton-loader/skeleton-loader.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-skeleton",
        "description": "Add SDUI render stories for Skeleton component (/src/components/ui/skeleton/skeleton.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-slider",
        "description": "Add SDUI render stories for Slider component (/src/components/ui/slider/slider.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-spacer",
        "description": "Add SDUI render stories for Spacer component (/src/components/ui/spacer/spacer.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-stack",
        "description": "Add SDUI render stories for Stack component (/src/components/ui/stack/stack.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-switch",
        "description": "Add SDUI render stories for Switch component (/src/components/ui/switch/switch.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-table",
        "description": "Add SDUI render stories for Table component (/src/components/ui/table/table.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-tabs",
        "description": "Add SDUI render stories for Tabs component (/src/components/ui/tabs/tabs.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-testimonial",
        "description": "Add SDUI render stories for Testimonial component (/src/components/ui/testimonial/testimonial.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-text",
        "description": "Add SDUI render stories for Text component (/src/components/ui/text/text.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-textarea",
        "description": "Add SDUI render stories for Textarea component (/src/components/ui/textarea/textarea.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-toast",
        "description": "Add SDUI render stories for Toast component (/src/components/ui/toast/toast.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-toggle-group",
        "description": "Add SDUI render stories for ToggleGroup component (/src/components/ui/toggle-group/toggle-group.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-toggle",
        "description": "Add SDUI render stories for Toggle component (/src/components/ui/toggle/toggle.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-tooltip",
        "description": "Add SDUI render stories for Tooltip component (/src/components/ui/tooltip/tooltip.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-announcement-bar",
        "description": "Add SDUI render stories for AnnouncementBar block component (/src/components/blocks/announcement-bar/announcement-bar.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-blog-post-detail",
        "description": "Add SDUI render stories for BlogPostDetail block component (/src/components/blocks/blog-post-detail/blog-post-detail.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-blog-post-grid",
        "description": "Add SDUI render stories for BlogPostGrid block component (/src/components/blocks/blog-post-grid/blog-post-grid.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-brand-logo-bar",
        "description": "Add SDUI render stories for BrandLogoBar block component (/src/components/blocks/brand-logo-bar/brand-logo-bar.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-call-to-action",
        "description": "Add SDUI render stories for CallToAction block component (/src/components/blocks/call-to-action/call-to-action.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-carousel-block",
        "description": "Add SDUI render stories for CarouselBlock block component (/src/components/blocks/carousel/carousel-block.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-contact-form-block",
        "description": "Add SDUI render stories for ContactFormBlock block component (/src/components/blocks/contact-form-block/contact-form-block.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-contact-form",
        "description": "Add SDUI render stories for ContactForm block component (/src/components/blocks/contact-form/contact-form.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-cookie-consent-banner",
        "description": "Add SDUI render stories for CookieConsentBanner block component (/src/components/blocks/cookie-consent-banner/cookie-consent-banner.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-error-page",
        "description": "Add SDUI render stories for ErrorPage block component (/src/components/blocks/error-page/error-page.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-event-listings",
        "description": "Add SDUI render stories for EventListings block component (/src/components/blocks/event-listings/event-listings.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-faq",
        "description": "Add SDUI render stories for FAQ block component (/src/components/blocks/faq/faq.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-feature-card",
        "description": "Add SDUI render stories for FeatureCard block component (/src/components/blocks/feature-card/feature-card.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-features",
        "description": "Add SDUI render stories for Features block component (/src/components/blocks/features/features.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-footer",
        "description": "Add SDUI render stories for Footer block component (/src/components/blocks/footer/footer.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-header",
        "description": "Add SDUI render stories for Header block component (/src/components/blocks/header/header.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-icon",
        "description": "Add SDUI render stories for Icon block component (/src/components/blocks/icon/icon.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-job-listings",
        "description": "Add SDUI render stories for JobListings block component (/src/components/blocks/job-listings/job-listings.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-latest-news",
        "description": "Add SDUI render stories for LatestNews block component (/src/components/blocks/latest-news/latest-news.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-location-hours",
        "description": "Add SDUI render stories for LocationHours block component (/src/components/blocks/location-hours/location-hours.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-google-map",
        "description": "Add SDUI render stories for GoogleMap block component (/src/components/blocks/map/google-map.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-map",
        "description": "Add SDUI render stories for Map block component (/src/components/blocks/map/map.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-newsletter-signup",
        "description": "Add SDUI render stories for NewsletterSignup block component (/src/components/blocks/newsletter-signup/newsletter-signup.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-page-hero-header",
        "description": "Add SDUI render stories for PageHeroHeader block component (/src/components/blocks/page-hero-header/page-hero-header.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-page-section",
        "description": "Add SDUI render stories for PageSection block component (/src/components/blocks/page-section/page-section.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-photo-flip-card",
        "description": "Add SDUI render stories for PhotoFlipCard block component (/src/components/blocks/photo-flip-card/photo-flip-card.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-photo-gallery",
        "description": "Add SDUI render stories for PhotoGallery block component (/src/components/blocks/photo-gallery/photo-gallery.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-portfolio-case-studies",
        "description": "Add SDUI render stories for PortfolioCaseStudies block component (/src/components/blocks/portfolio-case-studies/portfolio-case-studies.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-pricing-table",
        "description": "Add SDUI render stories for PricingTable block component (/src/components/blocks/pricing-table/pricing-table.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-process-steps",
        "description": "Add SDUI render stories for ProcessSteps block component (/src/components/blocks/process-steps/process-steps.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-product-showcase",
        "description": "Add SDUI render stories for ProductShowcase block component (/src/components/blocks/product-showcase/product-showcase.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-restaurant-menu",
        "description": "Add SDUI render stories for RestaurantMenu block component (/src/components/blocks/restaurant-menu/restaurant-menu.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-service-list",
        "description": "Add SDUI render stories for ServiceList block component (/src/components/blocks/service-list/service-list.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-social-share-bar",
        "description": "Add SDUI render stories for SocialShareBar block component (/src/components/blocks/social-share-bar/social-share-bar.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-stat-block",
        "description": "Add SDUI render stories for StatBlock block component (/src/components/blocks/stat-block/stat-block.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-team-grid",
        "description": "Add SDUI render stories for TeamGrid block component (/src/components/blocks/team-grid/team-grid.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-testimonial-block",
        "description": "Add SDUI render stories for Testimonial block component (/src/components/blocks/testimonial/testimonial.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-timeline",
        "description": "Add SDUI render stories for Timeline block component (/src/components/blocks/timeline/timeline.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      },
      {
        "id": "sdui-typewriter-text",
        "description": "Add SDUI render stories for TypewriterText block component (/src/components/blocks/typewriter-text/typewriter-text.stories.tsx). For each existing story variant, create a matching SDUI version that uses the render() function with JSON specification to achieve the same result.",
        "status": "pending"
      }
    ]
  }
]
