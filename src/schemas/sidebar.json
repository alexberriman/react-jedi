{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Sidebar Schema",
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "enum": ["sidebar"],
      "description": "The component type identifier"
    },
    "side": {
      "type": "string",
      "enum": ["left", "right"],
      "default": "left",
      "description": "The side of the screen where the sidebar appears"
    },
    "variant": {
      "type": "string",
      "enum": ["sidebar", "floating", "inset"],
      "default": "sidebar",
      "description": "The visual style variant of the sidebar"
    },
    "collapsible": {
      "type": "string",
      "enum": ["offcanvas", "icon", "none"],
      "default": "offcanvas",
      "description": "How the sidebar collapses on smaller screens"
    },
    "defaultOpen": {
      "type": "boolean",
      "default": true,
      "description": "Whether the sidebar is open by default"
    },
    "open": {
      "type": "boolean",
      "description": "Controlled state for the sidebar open/closed status"
    },
    "onOpenChange": {
      "type": "string",
      "description": "Event handler for when the sidebar open state changes"
    },
    "header": {
      "$ref": "#/definitions/sidebarSection",
      "description": "Header section of the sidebar"
    },
    "content": {
      "$ref": "#/definitions/sidebarContent",
      "description": "Main content section of the sidebar"
    },
    "footer": {
      "$ref": "#/definitions/sidebarSection",
      "description": "Footer section of the sidebar"
    },
    "style": {
      "$ref": "../schemas/base-schema.json#/definitions/style"
    },
    "className": {
      "type": "string",
      "description": "Additional CSS classes"
    }
  },
  "required": ["type"],
  "additionalProperties": false,
  "definitions": {
    "sidebarSection": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/sidebarMenu" },
              { "$ref": "#/definitions/sidebarInput" },
              { "$ref": "../schemas/base-schema.json#/definitions/component" }
            ]
          }
        }
      }
    },
    "sidebarContent": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sidebarGroup"
          }
        }
      }
    },
    "sidebarGroup": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for the sidebar group"
        },
        "action": {
          "type": "object",
          "properties": {
            "icon": {
              "type": "string",
              "description": "Icon name for the action"
            },
            "onClick": {
              "type": "string",
              "description": "Event handler for action click"
            }
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sidebarMenuItem"
          }
        }
      },
      "required": ["items"]
    },
    "sidebarMenu": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sidebarMenuItem"
          }
        }
      },
      "required": ["items"]
    },
    "sidebarMenuItem": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Text label for the menu item"
        },
        "icon": {
          "type": "string",
          "description": "Icon name for the menu item"
        },
        "href": {
          "type": "string",
          "description": "URL for the menu item link"
        },
        "badge": {
          "oneOf": [
            { "type": "string" },
            { "type": "number" }
          ],
          "description": "Badge content to display next to the menu item"
        },
        "action": {
          "type": "object",
          "properties": {
            "icon": {
              "type": "string",
              "description": "Icon name for the action"
            },
            "onClick": {
              "type": "string",
              "description": "Event handler for action click"
            },
            "showOnHover": {
              "type": "boolean",
              "default": false,
              "description": "Whether to show the action only on hover"
            }
          }
        },
        "tooltip": {
          "type": "string",
          "description": "Tooltip text for collapsed state"
        },
        "isActive": {
          "type": "boolean",
          "default": false,
          "description": "Whether this menu item is currently active"
        },
        "onClick": {
          "type": "string",
          "description": "Event handler for menu item click"
        },
        "subItems": {
          "type": "array",
          "description": "Nested menu items",
          "items": {
            "$ref": "#/definitions/sidebarSubMenuItem"
          }
        }
      },
      "required": ["label"]
    },
    "sidebarSubMenuItem": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Text label for the sub-menu item"
        },
        "href": {
          "type": "string",
          "description": "URL for the sub-menu item link"
        },
        "isActive": {
          "type": "boolean",
          "default": false,
          "description": "Whether this sub-menu item is currently active"
        },
        "onClick": {
          "type": "string",
          "description": "Event handler for sub-menu item click"
        }
      },
      "required": ["label"]
    },
    "sidebarInput": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["search"],
          "description": "Type of input"
        },
        "placeholder": {
          "type": "string",
          "description": "Placeholder text for the input"
        },
        "value": {
          "type": "string",
          "description": "Controlled value for the input"
        },
        "onChange": {
          "type": "string",
          "description": "Event handler for input change"
        }
      },
      "required": ["type"]
    }
  }
}