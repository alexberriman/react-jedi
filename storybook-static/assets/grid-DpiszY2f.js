import{j as $}from"./jsx-runtime-Cf8x2fCZ.js";import{r as T}from"./index-BlmOqGMO.js";import{c as j}from"./utils-C3T1saKV.js";const s=(e,r)=>typeof e=="object"?Object.entries(e).map(([t,n])=>t==="base"?`${r}-${n}`:`${t}:${r}-${n}`).join(" "):`${r}-${e}`,u=T.forwardRef(({className:e,columns:r=3,gap:t=4,autoFit:n=!1,minColWidth:o="250px",colWidth:l,rows:i,areas:a,flow:m="row",stretch:d=!1,children:p,...f},c)=>{const g=()=>n?`grid-cols-[repeat(auto-fit,${l||`minmax(${o}, 1fr)`})]`:s(r,"grid-cols"),w=()=>i?s(i,"grid-rows"):"",y=()=>s(t,"gap"),b=()=>`grid-flow-${m}`,h=()=>!a||a.length===0?"":`grid-areas-[${a.map(q=>`"${q}"`).join(" ")}]`;return $.jsx("div",{ref:c,className:j("grid",g(),w(),y(),b(),h(),d&&"h-full",e),...f,children:p})});u.displayName="Grid";u.__docgenInfo={description:`Grid component providing a CSS Grid-based layout system with responsive options.
Allows configuring columns, rows, gaps, flow direction and more.`,methods:[],displayName:"Grid",props:{columns:{required:!1,tsType:{name:"union",raw:"number | { [key: string]: number }",elements:[{name:"number"},{name:"signature",type:"object",raw:"{ [key: string]: number }",signature:{properties:[{key:{name:"string"},value:{name:"number",required:!0}}]}}]},description:`Number of columns in the grid
@default 3`,defaultValue:{value:"3",computed:!1}},gap:{required:!1,tsType:{name:"union",raw:"number | { [key: string]: number }",elements:[{name:"number"},{name:"signature",type:"object",raw:"{ [key: string]: number }",signature:{properties:[{key:{name:"string"},value:{name:"number",required:!0}}]}}]},description:`Gap between grid items
@default 4`,defaultValue:{value:"4",computed:!1}},autoFit:{required:!1,tsType:{name:"boolean"},description:`Whether to auto-fit columns to available width
@default false`,defaultValue:{value:"false",computed:!1}},minColWidth:{required:!1,tsType:{name:"string"},description:`Minimum width of auto-fit columns (when autoFit is true)
@default "250px"`,defaultValue:{value:'"250px"',computed:!1}},colWidth:{required:!1,tsType:{name:"string"},description:"Fixed column width (when autoFit is true)"},rows:{required:!1,tsType:{name:"union",raw:"number | { [key: string]: number }",elements:[{name:"number"},{name:"signature",type:"object",raw:"{ [key: string]: number }",signature:{properties:[{key:{name:"string"},value:{name:"number",required:!0}}]}}]},description:"Rows in the grid"},areas:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"Areas template for named grid areas"},flow:{required:!1,tsType:{name:"union",raw:'"row" | "column" | "dense" | "row-dense" | "column-dense"',elements:[{name:"literal",value:'"row"'},{name:"literal",value:'"column"'},{name:"literal",value:'"dense"'},{name:"literal",value:'"row-dense"'},{name:"literal",value:'"column-dense"'}]},description:`Flow direction of grid items
@default "row"`,defaultValue:{value:'"row"',computed:!1}},stretch:{required:!1,tsType:{name:"boolean"},description:`Whether grid items should stretch to fill container height
@default false`,defaultValue:{value:"false",computed:!1}}}};export{u as G};
