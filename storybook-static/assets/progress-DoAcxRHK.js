import{j as i}from"./jsx-runtime-Cf8x2fCZ.js";import{r as c}from"./index-BlmOqGMO.js";import{c as $}from"./index-Dkb_ZYRU.js";import{P as v}from"./index-BFNyJKjA.js";import{c as I}from"./utils-C3T1saKV.js";var u="Progress",d=100,[_,T]=$(u),[y,E]=_(u),f=c.forwardRef((r,e)=>{const{__scopeProgress:n,value:o=null,max:a,getValueLabel:N=j,...b}=r;(a||a===0)&&!p(a)&&console.error(R(`${a}`,"Progress"));const t=p(a)?a:d;o!==null&&!m(o,t)&&console.error(w(`${o}`,"Progress"));const s=m(o,t)?o:null,h=l(s)?N(s,t):void 0;return i.jsx(y,{scope:n,value:s,max:t,children:i.jsx(v.div,{"aria-valuemax":t,"aria-valuemin":0,"aria-valuenow":l(s)?s:void 0,"aria-valuetext":h,role:"progressbar","data-state":P(s,t),"data-value":s??void 0,"data-max":t,...b,ref:e})})});f.displayName=u;var g="ProgressIndicator",x=c.forwardRef((r,e)=>{const{__scopeProgress:n,...o}=r,a=E(g,n);return i.jsx(v.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...o,ref:e})});x.displayName=g;function j(r,e){return`${Math.round(r/e*100)}%`}function P(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function l(r){return typeof r=="number"}function p(r){return l(r)&&!isNaN(r)&&r>0}function m(r,e){return l(r)&&!isNaN(r)&&r<=e&&r>=0}function R(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${d}\`.`}function w(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${d} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var M=f,V=x;function A({className:r,value:e,...n}){return i.jsx(M,{"data-slot":"progress",className:I("bg-primary/20 relative h-2 w-full overflow-hidden rounded-full",r),...n,children:i.jsx(V,{"data-slot":"progress-indicator",className:"bg-primary h-full w-full flex-1 transition-all",style:{transform:`translateX(-${100-(e||0)}%)`}})})}A.__docgenInfo={description:"",methods:[],displayName:"Progress"};export{A as P};
