[
  {
    "id": "dual-mode-error-page",
    "description": "Implement dual-mode story functionality for ErrorPage component. CRITICAL: The args MUST use type 'ErrorPage' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (error code, message, back button, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-event-listings",
    "description": "Implement dual-mode story functionality for EventListings component. CRITICAL: The args MUST use type 'EventListings' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (event titles, dates, locations, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-faq",
    "description": "Implement dual-mode story functionality for FAQ component. CRITICAL: The args MUST use type 'FAQ' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (questions, answers, accordion functionality, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-feature-card",
    "description": "Implement dual-mode story functionality for FeatureCard component. CRITICAL: The args MUST use type 'FeatureCard' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (icon, title, description, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-features",
    "description": "Implement dual-mode story functionality for Features component. CRITICAL: The args MUST use type 'Features' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (feature list, icons, descriptions, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-footer",
    "description": "Implement dual-mode story functionality for Footer component. CRITICAL: The args MUST use type 'Footer' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (links, copyright, social icons, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-header",
    "description": "Implement dual-mode story functionality for Header component. CRITICAL: The args MUST use type 'Header' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (logo, navigation, menu items, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-icon",
    "description": "Implement dual-mode story functionality for Icon component. CRITICAL: The args MUST use type 'Icon' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (icon svg, size, color, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-job-listings",
    "description": "Implement dual-mode story functionality for JobListings component. CRITICAL: The args MUST use type 'JobListings' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (job titles, descriptions, locations, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-latest-news",
    "description": "Implement dual-mode story functionality for LatestNews component. CRITICAL: The args MUST use type 'LatestNews' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (news items, dates, summaries, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-location-hours",
    "description": "Implement dual-mode story functionality for LocationHours component. CRITICAL: The args MUST use type 'LocationHours' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (location names, hours, addresses, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-map",
    "description": "Implement dual-mode story functionality for Map component. CRITICAL: The args MUST use type 'Map' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (map container, markers, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-google-map",
    "description": "Implement dual-mode story functionality for GoogleMap component. CRITICAL: The args MUST use type 'GoogleMap' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (map iframe, markers, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-newsletter-signup",
    "description": "Implement dual-mode story functionality for NewsletterSignup component. CRITICAL: The args MUST use type 'NewsletterSignup' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (email input, submit button, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-page-hero-header",
    "description": "Implement dual-mode story functionality for PageHeroHeader component. CRITICAL: The args MUST use type 'PageHeroHeader' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (hero title, subtitle, CTA buttons, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-page-section",
    "description": "Implement dual-mode story functionality for PageSection component. CRITICAL: The args MUST use type 'PageSection' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (section content, padding, background, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-photo-flip-card",
    "description": "Implement dual-mode story functionality for PhotoFlipCard component. CRITICAL: The args MUST use type 'PhotoFlipCard' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (front/back content, images, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-photo-gallery",
    "description": "Implement dual-mode story functionality for PhotoGallery component. CRITICAL: The args MUST use type 'PhotoGallery' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (images, captions, grid layout, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-portfolio-case-studies",
    "description": "Implement dual-mode story functionality for PortfolioCaseStudies component. CRITICAL: The args MUST use type 'PortfolioCaseStudies' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (case study cards, titles, images, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-pricing-table",
    "description": "Implement dual-mode story functionality for PricingTable component. CRITICAL: The args MUST use type 'PricingTable' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (pricing tiers, features, prices, CTA buttons, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-process-steps",
    "description": "Implement dual-mode story functionality for ProcessSteps component. CRITICAL: The args MUST use type 'ProcessSteps' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (step numbers, titles, descriptions, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-product-showcase",
    "description": "Implement dual-mode story functionality for ProductShowcase component. CRITICAL: The args MUST use type 'ProductShowcase' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (product images, features, descriptions, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-restaurant-menu",
    "description": "Implement dual-mode story functionality for RestaurantMenu component. CRITICAL: The args MUST use type 'RestaurantMenu' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (menu sections, items, prices, descriptions, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-service-list",
    "description": "Implement dual-mode story functionality for ServiceList component. CRITICAL: The args MUST use type 'ServiceList' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (service items, icons, descriptions, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-sidebar",
    "description": "Implement dual-mode story functionality for Sidebar component. CRITICAL: The args MUST use type 'Sidebar' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (sidebar content, navigation items, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-social-share-bar",
    "description": "Implement dual-mode story functionality for SocialShareBar component. CRITICAL: The args MUST use type 'SocialShareBar' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (share buttons, icons, links, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-stat-block",
    "description": "Implement dual-mode story functionality for StatBlock component. CRITICAL: The args MUST use type 'StatBlock' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (stat values, labels, icons, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-team-grid",
    "description": "Implement dual-mode story functionality for TeamGrid component. CRITICAL: The args MUST use type 'TeamGrid' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (team member cards, names, roles, images, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-testimonial",
    "description": "Implement dual-mode story functionality for Testimonial component. CRITICAL: The args MUST use type 'Testimonial' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (quote text, author, role, avatar, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-timeline",
    "description": "Implement dual-mode story functionality for Timeline component. CRITICAL: The args MUST use type 'Timeline' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (timeline items, dates, descriptions, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  },
  {
    "id": "dual-mode-typewriter-text",
    "description": "Implement dual-mode story functionality for TypewriterText component. CRITICAL: The args MUST use type 'TypewriterText' NOT 'component'. The SDUI view should render EXACTLY the same as the React view. Add play() functions that verify actual content renders (animated text, cursor, etc). Test by viewing both React and SDUI tabs in Storybook - they should be identical.",
    "status": "pending"
  }
]