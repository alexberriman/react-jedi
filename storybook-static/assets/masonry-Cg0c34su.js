import{j as f}from"./jsx-runtime-Cf8x2fCZ.js";import{r as s}from"./index-tvICUrOf.js";import{c}from"./utils-C3T1saKV.js";const E=(a,e)=>typeof a=="object"?Object.entries(a).map(([i,o])=>i==="base"?`${e}-${o}`:`${i}:${e}-${o}`).join(" "):`${e}-${a}`,y=s.forwardRef(({className:a,columns:e=3,gap:i=4,minColWidth:o="250px",autoFit:g=!1,animation:u={duration:.3,stagger:.05},glassmorphic:b=!1,itemComponent:h="div",children:w,...v},x)=>{const[C,j]=s.useState(!1),[l,n]=s.useState(()=>typeof e=="number"?e:e.base||3);s.useEffect(()=>{if(j(!0),typeof e=="object"){const r=()=>{const t=window.innerWidth;t>=1536&&e["2xl"]?n(e["2xl"]):t>=1280&&e.xl?n(e.xl):t>=1024&&e.lg?n(e.lg):t>=768&&e.md?n(e.md):t>=640&&e.sm?n(e.sm):n(e.base||3)};return r(),window.addEventListener("resize",r),()=>window.removeEventListener("resize",r)}},[e]);const k=(()=>{const r=Array.from({length:l},()=>[]),t=s.Children.toArray(w);for(const[m,d]of t.entries()){const p=m%l;r[p].push(d)}return r})(),q=()=>g?{gridTemplateColumns:`repeat(auto-fit, minmax(${o}, 1fr))`}:{},T=()=>E(i,"gap");return f.jsx("div",{ref:x,className:c("grid w-full",T(),!g&&`grid-cols-${l}`,a),style:q(),...v,children:k.map((r,t)=>f.jsx("div",{className:"flex flex-col gap-[inherit]",children:r.map((m,d)=>{const p=t+d*l,$=u.stagger?p*u.stagger:0;return f.jsx(h,{className:c("transition-all",C&&"animate-fadeIn",b&&["backdrop-blur-md","bg-white/10","dark:bg-gray-900/10","border border-white/20","dark:border-gray-700/30","shadow-xl","hover:shadow-2xl","hover:bg-white/15","dark:hover:bg-gray-900/15","hover:scale-[1.02]","cursor-pointer"]),style:{animationDelay:`${$}s`,animationDuration:`${u.duration}s`,animationTimingFunction:u.easing||"ease-out"},children:m},d)})},t))})});y.displayName="Masonry";y.__docgenInfo={description:`Masonry component creates a Pinterest-style grid layout with items flowing vertically.
Supports responsive columns, animations, and beautiful glassmorphic effects.`,methods:[],displayName:"Masonry",props:{columns:{required:!1,tsType:{name:"union",raw:"number | { [key: string]: number }",elements:[{name:"number"},{name:"signature",type:"object",raw:"{ [key: string]: number }",signature:{properties:[{key:{name:"string"},value:{name:"number",required:!0}}]}}]},description:`Number of columns in the masonry grid
Can be responsive with breakpoint object
@default 3`,defaultValue:{value:"3",computed:!1}},gap:{required:!1,tsType:{name:"union",raw:"number | { [key: string]: number }",elements:[{name:"number"},{name:"signature",type:"object",raw:"{ [key: string]: number }",signature:{properties:[{key:{name:"string"},value:{name:"number",required:!0}}]}}]},description:`Gap between masonry items (in Tailwind units)
@default 4`,defaultValue:{value:"4",computed:!1}},minColWidth:{required:!1,tsType:{name:"string"},description:`Minimum width for columns when using auto-sizing
@default "250px"`,defaultValue:{value:'"250px"',computed:!1}},autoFit:{required:!1,tsType:{name:"boolean"},description:`Whether to use auto-fit columns based on container width
@default false`,defaultValue:{value:"false",computed:!1}},animation:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  duration?: number;
  stagger?: number;
  easing?: string;
}`,signature:{properties:[{key:"duration",value:{name:"number",required:!1}},{key:"stagger",value:{name:"number",required:!1}},{key:"easing",value:{name:"string",required:!1}}]}},description:`Animation settings for items entering the viewport
@default { duration: 0.3, stagger: 0.05 }`,defaultValue:{value:"{ duration: 0.3, stagger: 0.05 }",computed:!1}},glassmorphic:{required:!1,tsType:{name:"boolean"},description:`Whether to apply glassmorphic effects to items
@default false`,defaultValue:{value:"false",computed:!1}},itemComponent:{required:!1,tsType:{name:"ReactElementType",raw:"React.ElementType"},description:"Custom item wrapper component",defaultValue:{value:'"div"',computed:!1}}}};export{y as M};
