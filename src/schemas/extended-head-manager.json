{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExtendedHeadManager",
  "description": "Extended head manager component with support for SEO metadata and structured data",
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "enum": ["extended-head-manager", "ExtendedHeadManager"],
      "description": "Component type identifier"
    },
    "metadata": {
      "type": "object",
      "description": "SEO metadata configuration",
      "properties": {
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "description": {
          "type": "string",
          "description": "Page description"
        },
        "keywords": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Page keywords"
        },
        "author": {
          "type": "string",
          "description": "Page author"
        },
        "canonicalUrl": {
          "type": "string",
          "format": "uri",
          "description": "Canonical URL for the page"
        },
        "robots": {
          "type": "string",
          "description": "Robots meta tag content"
        },
        "ogTitle": {
          "type": "string",
          "description": "Open Graph title"
        },
        "ogDescription": {
          "type": "string",
          "description": "Open Graph description"
        },
        "ogImage": {
          "type": "string",
          "format": "uri",
          "description": "Open Graph image URL"
        },
        "ogType": {
          "type": "string",
          "description": "Open Graph type (e.g., 'website', 'article')"
        },
        "ogUrl": {
          "type": "string",
          "format": "uri",
          "description": "Open Graph URL"
        },
        "twitterCard": {
          "type": "string",
          "enum": ["summary", "summary_large_image", "app", "player"],
          "description": "Twitter card type"
        },
        "twitterTitle": {
          "type": "string",
          "description": "Twitter card title"
        },
        "twitterDescription": {
          "type": "string",
          "description": "Twitter card description"
        },
        "twitterImage": {
          "type": "string",
          "format": "uri",
          "description": "Twitter card image URL"
        },
        "twitterSite": {
          "type": "string",
          "description": "Twitter @username of website"
        },
        "twitterCreator": {
          "type": "string",
          "description": "Twitter @username of content creator"
        }
      },
      "required": ["title"]
    },
    "titleSuffix": {
      "type": "string",
      "description": "Suffix to append to all page titles"
    },
    "defaultTitle": {
      "type": "string",
      "description": "Default title when no title is provided"
    },
    "favicon": {
      "oneOf": [
        {
          "type": "string",
          "format": "uri",
          "description": "Single favicon URL"
        },
        {
          "type": "object",
          "properties": {
            "default": {
              "type": "string",
              "format": "uri",
              "description": "Default favicon URL"
            },
            "png16": {
              "type": "string",
              "format": "uri",
              "description": "16x16 PNG favicon"
            },
            "png32": {
              "type": "string",
              "format": "uri",
              "description": "32x32 PNG favicon"
            },
            "png192": {
              "type": "string",
              "format": "uri",
              "description": "192x192 PNG favicon"
            },
            "png512": {
              "type": "string",
              "format": "uri",
              "description": "512x512 PNG favicon"
            },
            "apple": {
              "type": "string",
              "format": "uri",
              "description": "Apple touch icon"
            }
          },
          "description": "Multiple favicon formats"
        }
      ]
    },
    "structuredData": {
      "oneOf": [
        {
          "type": "object",
          "description": "Single structured data object",
          "$ref": "#/definitions/structuredDataSchema"
        },
        {
          "type": "array",
          "description": "Array of structured data objects",
          "items": {
            "$ref": "#/definitions/structuredDataSchema"
          }
        }
      ]
    }
  },
  "required": ["type", "metadata"],
  "definitions": {
    "structuredDataSchema": {
      "type": "object",
      "properties": {
        "@context": {
          "type": "string",
          "const": "https://schema.org",
          "description": "Schema.org context"
        },
        "@type": {
          "type": "string",
          "enum": [
            "Organization",
            "Person", 
            "WebSite",
            "Article",
            "BlogPosting",
            "NewsArticle",
            "Product",
            "BreadcrumbList",
            "Event",
            "FAQPage",
            "VideoObject",
            "Recipe"
          ],
          "description": "Schema.org type"
        }
      },
      "required": ["@context", "@type"],
      "allOf": [
        {
          "if": {
            "properties": { "@type": { "const": "Organization" } }
          },
          "then": {
            "properties": {
              "name": { "type": "string" },
              "url": { "type": "string", "format": "uri" },
              "logo": { "type": "string", "format": "uri" },
              "description": { "type": "string" },
              "sameAs": {
                "type": "array",
                "items": { "type": "string", "format": "uri" }
              },
              "contactPoint": {
                "type": "object",
                "properties": {
                  "@type": { "const": "ContactPoint" },
                  "telephone": { "type": "string" },
                  "contactType": { "type": "string" },
                  "availableLanguage": {
                    "oneOf": [
                      { "type": "string" },
                      { "type": "array", "items": { "type": "string" } }
                    ]
                  }
                }
              },
              "address": {
                "type": "object",
                "properties": {
                  "@type": { "const": "PostalAddress" },
                  "streetAddress": { "type": "string" },
                  "addressLocality": { "type": "string" },
                  "addressRegion": { "type": "string" },
                  "postalCode": { "type": "string" },
                  "addressCountry": { "type": "string" }
                }
              }
            },
            "required": ["name"]
          }
        },
        {
          "if": {
            "properties": { "@type": { "const": "Person" } }
          },
          "then": {
            "properties": {
              "name": { "type": "string" },
              "url": { "type": "string", "format": "uri" },
              "email": { "type": "string", "format": "email" },
              "image": { "type": "string", "format": "uri" },
              "jobTitle": { "type": "string" },
              "sameAs": {
                "type": "array",
                "items": { "type": "string", "format": "uri" }
              }
            },
            "required": ["name"]
          }
        },
        {
          "if": {
            "properties": { "@type": { "const": "WebSite" } }
          },
          "then": {
            "properties": {
              "url": { "type": "string", "format": "uri" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "potentialAction": {
                "type": "object",
                "properties": {
                  "@type": { "const": "SearchAction" },
                  "target": {
                    "type": "object",
                    "properties": {
                      "@type": { "const": "EntryPoint" },
                      "urlTemplate": { "type": "string" }
                    },
                    "required": ["@type", "urlTemplate"]
                  },
                  "query-input": { "type": "string" }
                },
                "required": ["@type", "target", "query-input"]
              }
            },
            "required": ["url"]
          }
        },
        {
          "if": {
            "properties": { 
              "@type": { 
                "enum": ["Article", "BlogPosting", "NewsArticle"] 
              } 
            }
          },
          "then": {
            "properties": {
              "headline": { "type": "string" },
              "author": {
                "oneOf": [
                  { "type": "string" },
                  { "$ref": "#/definitions/structuredDataSchema" }
                ]
              },
              "datePublished": { "type": "string", "format": "date-time" },
              "dateModified": { "type": "string", "format": "date-time" },
              "description": { "type": "string" },
              "image": {
                "oneOf": [
                  { "type": "string", "format": "uri" },
                  { 
                    "type": "array", 
                    "items": { "type": "string", "format": "uri" } 
                  }
                ]
              }
            },
            "required": ["headline", "author", "datePublished"]
          }
        },
        {
          "if": {
            "properties": { "@type": { "const": "Product" } }
          },
          "then": {
            "properties": {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "image": {
                "oneOf": [
                  { "type": "string", "format": "uri" },
                  { 
                    "type": "array", 
                    "items": { "type": "string", "format": "uri" } 
                  }
                ]
              },
              "brand": {
                "oneOf": [
                  { "type": "string" },
                  { "$ref": "#/definitions/structuredDataSchema" }
                ]
              },
              "offers": {
                "type": "object",
                "properties": {
                  "@type": { "const": "Offer" },
                  "url": { "type": "string", "format": "uri" },
                  "priceCurrency": { "type": "string" },
                  "price": {
                    "oneOf": [
                      { "type": "string" },
                      { "type": "number" }
                    ]
                  },
                  "priceValidUntil": { "type": "string", "format": "date" },
                  "itemCondition": { "type": "string" },
                  "availability": { "type": "string" }
                },
                "required": ["@type", "priceCurrency", "price"]
              },
              "aggregateRating": {
                "type": "object",
                "properties": {
                  "@type": { "const": "AggregateRating" },
                  "ratingValue": { "type": "number" },
                  "reviewCount": { "type": "number" }
                },
                "required": ["@type", "ratingValue", "reviewCount"]
              }
            },
            "required": ["name"]
          }
        },
        {
          "if": {
            "properties": { "@type": { "const": "BreadcrumbList" } }
          },
          "then": {
            "properties": {
              "itemListElement": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "@type": { "const": "ListItem" },
                    "position": { "type": "number" },
                    "name": { "type": "string" },
                    "item": { "type": "string", "format": "uri" }
                  },
                  "required": ["@type", "position", "name"]
                }
              }
            },
            "required": ["itemListElement"]
          }
        },
        {
          "if": {
            "properties": { "@type": { "const": "Event" } }
          },
          "then": {
            "properties": {
              "name": { "type": "string" },
              "startDate": { "type": "string", "format": "date-time" },
              "endDate": { "type": "string", "format": "date-time" },
              "description": { "type": "string" },
              "location": {
                "type": "object",
                "properties": {
                  "@type": { "const": "Place" },
                  "name": { "type": "string" },
                  "address": {
                    "type": "object",
                    "properties": {
                      "@type": { "const": "PostalAddress" },
                      "streetAddress": { "type": "string" },
                      "addressLocality": { "type": "string" },
                      "addressRegion": { "type": "string" },
                      "postalCode": { "type": "string" },
                      "addressCountry": { "type": "string" }
                    }
                  }
                },
                "required": ["@type", "name"]
              },
              "image": {
                "oneOf": [
                  { "type": "string", "format": "uri" },
                  { 
                    "type": "array", 
                    "items": { "type": "string", "format": "uri" } 
                  }
                ]
              }
            },
            "required": ["name", "startDate"]
          }
        },
        {
          "if": {
            "properties": { "@type": { "const": "FAQPage" } }
          },
          "then": {
            "properties": {
              "mainEntity": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "@type": { "const": "Question" },
                    "name": { "type": "string" },
                    "acceptedAnswer": {
                      "type": "object",
                      "properties": {
                        "@type": { "const": "Answer" },
                        "text": { "type": "string" }
                      },
                      "required": ["@type", "text"]
                    }
                  },
                  "required": ["@type", "name", "acceptedAnswer"]
                }
              }
            },
            "required": ["mainEntity"]
          }
        }
      ]
    }
  }
}