{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Popover",
  "description": "A floating container component that displays content on top of the main page content",
  "type": "object",
  "properties": {
    "type": {
      "const": "Popover"
    },
    "open": {
      "type": "boolean",
      "description": "Controlled open state of the popover"
    },
    "defaultOpen": {
      "type": "boolean",
      "description": "Default open state of the popover"
    },
    "modal": {
      "type": "boolean",
      "description": "Whether the popover should be modal",
      "default": false
    },
    "onOpenChange": {
      "type": "string",
      "description": "Event handler ID for when open state changes"
    },
    "children": {
      "type": "array",
      "items": {
        "oneOf": [
          { "$ref": "#/definitions/PopoverTrigger" },
          { "$ref": "#/definitions/PopoverContent" },
          { "$ref": "#/definitions/PopoverAnchor" }
        ]
      },
      "minItems": 2,
      "description": "Child components (trigger and content)"
    }
  },
  "required": ["type", "children"],
  "definitions": {
    "PopoverTrigger": {
      "type": "object",
      "properties": {
        "type": {
          "const": "PopoverTrigger"
        },
        "asChild": {
          "type": "boolean",
          "description": "Whether to render as child of the trigger element",
          "default": false
        },
        "children": {
          "description": "Content to be used as trigger"
        }
      },
      "required": ["type", "children"]
    },
    "PopoverContent": {
      "type": "object",
      "properties": {
        "type": {
          "const": "PopoverContent"
        },
        "side": {
          "type": "string",
          "enum": ["top", "right", "bottom", "left"],
          "default": "bottom",
          "description": "The preferred side of the anchor to render against"
        },
        "sideOffset": {
          "type": "number",
          "default": 4,
          "description": "Distance in pixels from the anchor"
        },
        "align": {
          "type": "string",
          "enum": ["start", "center", "end"],
          "default": "center",
          "description": "The preferred alignment against the anchor"
        },
        "alignOffset": {
          "type": "number",
          "default": 0,
          "description": "An offset in pixels from the alignment"
        },
        "avoidCollisions": {
          "type": "boolean",
          "default": true,
          "description": "Whether to prevent the popover from colliding with boundary edges"
        },
        "collisionBoundary": {
          "type": "array",
          "description": "Element(s) or rect to use as collision boundary"
        },
        "collisionPadding": {
          "type": ["number", "object"],
          "description": "Distance in pixels from boundary edges where collision is detected"
        },
        "arrowPadding": {
          "type": "number",
          "default": 0,
          "description": "Padding between arrow and popover edges"
        },
        "sticky": {
          "type": "string",
          "enum": ["partial", "always"],
          "default": "partial",
          "description": "Whether to keep the popover in view when it's being positioned"
        },
        "hideWhenDetached": {
          "type": "boolean",
          "default": false,
          "description": "Whether to hide the popover when the trigger is fully occluded"
        },
        "updatePositionStrategy": {
          "type": "string",
          "enum": ["optimized", "always"],
          "default": "optimized",
          "description": "Strategy to update position"
        },
        "className": {
          "type": "string",
          "description": "Additional CSS classes"
        },
        "style": {
          "type": "object",
          "description": "Inline styles"
        },
        "forceMount": {
          "type": "boolean",
          "description": "Force mount the content"
        },
        "children": {
          "description": "Content to display in the popover"
        }
      },
      "required": ["type", "children"]
    },
    "PopoverAnchor": {
      "type": "object",
      "properties": {
        "type": {
          "const": "PopoverAnchor"
        },
        "asChild": {
          "type": "boolean",
          "description": "Whether to render as child of the anchor element",
          "default": false
        },
        "children": {
          "description": "Content to be used as anchor"
        }
      },
      "required": ["type", "children"]
    }
  }
}